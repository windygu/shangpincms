//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1008 版自动生成。
// 
#pragma warning disable 1591

namespace Shangpin.Ocs.Service.StockWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StockWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class StockWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetUsableStockQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySumListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySumNoCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySumByProductNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErpInventoryPIDRefOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsInventoryPIDRefExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPidInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPidListOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockStockCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnlockStockCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderRollBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmCancelOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DistributeOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PackOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PackOrderRollBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocateAuditSucceedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllocateAuditFailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialAllocateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialAllocateAuditSucceedOperationCompleted;
        
        private System.Threading.SendOrPostCallback SpecialAllocateAuditFailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOrderStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseInStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnBeforeDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnAfterDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackAuditSucceedOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackAuditFailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback BackRequestPidCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyLogisticsNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyStorePositionNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertOrderTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConvertSkuTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyConsignVirtualStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProductTransferOperationCompleted;
        
        private System.Threading.SendOrPostCallback LendRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LendAuditFailedOperationCompleted;
        
        private System.Threading.SendOrPostCallback LendGiveBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferConsignVirtualStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback StockTakingOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutCancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferInOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutCreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutReturnOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutExchangePidOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutValidateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RepairBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback VirtualProductCreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback LockPidOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnLockPidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStockFlagByPidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConsignEntityIventoryQuantityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySumByProductNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapLockInventorySumOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReceiveProductOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveCacheOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryChangeLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySumNoCache1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventory1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventoryPIDRefBySkuNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNormalInventorySumOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNormalWareHouseInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyChannelInventoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnLockPidByProductNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmCancelOrderRollBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInventorySumByValidProductNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback SplitOrderRollBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback SwapUnLockInventorySumOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmChannelOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback VirtualProductPackOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback TransferOutReturnOrderUnLockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSkuInventoryBySkuNosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSkuNoCacheKeyFormatStringOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMemcachedServerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StockWebService() {
            this.Url = global::Shangpin.Ocs.Service.Properties.Settings.Default.Shangpin_Ocs_Service_StockWebService_StockWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetUsableStockQuantityCompletedEventHandler GetUsableStockQuantityCompleted;
        
        /// <remarks/>
        public event GetInventorySumCompletedEventHandler GetInventorySumCompleted;
        
        /// <remarks/>
        public event GetInventoryCompletedEventHandler GetInventoryCompleted;
        
        /// <remarks/>
        public event GetInventorySumListCompletedEventHandler GetInventorySumListCompleted;
        
        /// <remarks/>
        public event GetInventorySumNoCacheCompletedEventHandler GetInventorySumNoCacheCompleted;
        
        /// <remarks/>
        public event GetInventorySumByProductNoCompletedEventHandler GetInventorySumByProductNoCompleted;
        
        /// <remarks/>
        public event GetErpInventoryPIDRefCompletedEventHandler GetErpInventoryPIDRefCompleted;
        
        /// <remarks/>
        public event IsInventoryPIDRefExistCompletedEventHandler IsInventoryPIDRefExistCompleted;
        
        /// <remarks/>
        public event GetPidInfoCompletedEventHandler GetPidInfoCompleted;
        
        /// <remarks/>
        public event GetPidListCompletedEventHandler GetPidListCompleted;
        
        /// <remarks/>
        public event LockStockCacheCompletedEventHandler LockStockCacheCompleted;
        
        /// <remarks/>
        public event UnlockStockCacheCompletedEventHandler UnlockStockCacheCompleted;
        
        /// <remarks/>
        public event CreateOrderCompletedEventHandler CreateOrderCompleted;
        
        /// <remarks/>
        public event CreateOrderRollBackCompletedEventHandler CreateOrderRollBackCompleted;
        
        /// <remarks/>
        public event CancelOrderCompletedEventHandler CancelOrderCompleted;
        
        /// <remarks/>
        public event ConfirmCancelOrderCompletedEventHandler ConfirmCancelOrderCompleted;
        
        /// <remarks/>
        public event SplitOrderCompletedEventHandler SplitOrderCompleted;
        
        /// <remarks/>
        public event DistributeOrderCompletedEventHandler DistributeOrderCompleted;
        
        /// <remarks/>
        public event PackOrderCompletedEventHandler PackOrderCompleted;
        
        /// <remarks/>
        public event PackOrderRollBackCompletedEventHandler PackOrderRollBackCompleted;
        
        /// <remarks/>
        public event AllocateRequestCompletedEventHandler AllocateRequestCompleted;
        
        /// <remarks/>
        public event AllocateAuditSucceedCompletedEventHandler AllocateAuditSucceedCompleted;
        
        /// <remarks/>
        public event AllocateAuditFailedCompletedEventHandler AllocateAuditFailedCompleted;
        
        /// <remarks/>
        public event SpecialAllocateRequestCompletedEventHandler SpecialAllocateRequestCompleted;
        
        /// <remarks/>
        public event SpecialAllocateAuditSucceedCompletedEventHandler SpecialAllocateAuditSucceedCompleted;
        
        /// <remarks/>
        public event SpecialAllocateAuditFailedCompletedEventHandler SpecialAllocateAuditFailedCompleted;
        
        /// <remarks/>
        public event TransferOrderStockCompletedEventHandler TransferOrderStockCompleted;
        
        /// <remarks/>
        public event PurchaseInStockCompletedEventHandler PurchaseInStockCompleted;
        
        /// <remarks/>
        public event ReceiveProductCompletedEventHandler ReceiveProductCompleted;
        
        /// <remarks/>
        public event ReturnBeforeDeliveryCompletedEventHandler ReturnBeforeDeliveryCompleted;
        
        /// <remarks/>
        public event ReturnAfterDeliveryCompletedEventHandler ReturnAfterDeliveryCompleted;
        
        /// <remarks/>
        public event BackRequestCompletedEventHandler BackRequestCompleted;
        
        /// <remarks/>
        public event BackAuditSucceedCompletedEventHandler BackAuditSucceedCompleted;
        
        /// <remarks/>
        public event BackAuditFailedCompletedEventHandler BackAuditFailedCompleted;
        
        /// <remarks/>
        public event BackRequestPidCancelCompletedEventHandler BackRequestPidCancelCompleted;
        
        /// <remarks/>
        public event ModifyLogisticsNoCompletedEventHandler ModifyLogisticsNoCompleted;
        
        /// <remarks/>
        public event ModifyStorePositionNoCompletedEventHandler ModifyStorePositionNoCompleted;
        
        /// <remarks/>
        public event ConvertOrderTypeCompletedEventHandler ConvertOrderTypeCompleted;
        
        /// <remarks/>
        public event ConvertSkuTypeCompletedEventHandler ConvertSkuTypeCompleted;
        
        /// <remarks/>
        public event ModifyConsignVirtualStockCompletedEventHandler ModifyConsignVirtualStockCompleted;
        
        /// <remarks/>
        public event ProductTransferCompletedEventHandler ProductTransferCompleted;
        
        /// <remarks/>
        public event LendRequestCompletedEventHandler LendRequestCompleted;
        
        /// <remarks/>
        public event LendAuditFailedCompletedEventHandler LendAuditFailedCompleted;
        
        /// <remarks/>
        public event LendGiveBackCompletedEventHandler LendGiveBackCompleted;
        
        /// <remarks/>
        public event TransferConsignVirtualStockCompletedEventHandler TransferConsignVirtualStockCompleted;
        
        /// <remarks/>
        public event StockTakingCompletedEventHandler StockTakingCompleted;
        
        /// <remarks/>
        public event TransferOutCompletedEventHandler TransferOutCompleted;
        
        /// <remarks/>
        public event TransferOutCancelCompletedEventHandler TransferOutCancelCompleted;
        
        /// <remarks/>
        public event TransferInCompletedEventHandler TransferInCompleted;
        
        /// <remarks/>
        public event TransferOutCreateOrderCompletedEventHandler TransferOutCreateOrderCompleted;
        
        /// <remarks/>
        public event TransferOutReturnOrderCompletedEventHandler TransferOutReturnOrderCompleted;
        
        /// <remarks/>
        public event TransferOutExchangePidCompletedEventHandler TransferOutExchangePidCompleted;
        
        /// <remarks/>
        public event TransferOutValidateCompletedEventHandler TransferOutValidateCompleted;
        
        /// <remarks/>
        public event RepairBackCompletedEventHandler RepairBackCompleted;
        
        /// <remarks/>
        public event VirtualProductCreateOrderCompletedEventHandler VirtualProductCreateOrderCompleted;
        
        /// <remarks/>
        public event LockPidCompletedEventHandler LockPidCompleted;
        
        /// <remarks/>
        public event UnLockPidCompletedEventHandler UnLockPidCompleted;
        
        /// <remarks/>
        public event GetStockFlagByPidCompletedEventHandler GetStockFlagByPidCompleted;
        
        /// <remarks/>
        public event GetConsignEntityIventoryQuantityCompletedEventHandler GetConsignEntityIventoryQuantityCompleted;
        
        /// <remarks/>
        public event GetInventorySumByProductNosCompletedEventHandler GetInventorySumByProductNosCompleted;
        
        /// <remarks/>
        public event SwapLockInventorySumCompletedEventHandler SwapLockInventorySumCompleted;
        
        /// <remarks/>
        public event DeleteReceiveProductCompletedEventHandler DeleteReceiveProductCompleted;
        
        /// <remarks/>
        public event GetCacheCompletedEventHandler GetCacheCompleted;
        
        /// <remarks/>
        public event RemoveCacheCompletedEventHandler RemoveCacheCompleted;
        
        /// <remarks/>
        public event GetInventoryChangeLogCompletedEventHandler GetInventoryChangeLogCompleted;
        
        /// <remarks/>
        public event GetInventorySumNoCache1CompletedEventHandler GetInventorySumNoCache1Completed;
        
        /// <remarks/>
        public event GetInventory1CompletedEventHandler GetInventory1Completed;
        
        /// <remarks/>
        public event GetInventoryPIDRefBySkuNoCompletedEventHandler GetInventoryPIDRefBySkuNoCompleted;
        
        /// <remarks/>
        public event UpdateNormalInventorySumCompletedEventHandler UpdateNormalInventorySumCompleted;
        
        /// <remarks/>
        public event UpdateNormalWareHouseInventoryCompletedEventHandler UpdateNormalWareHouseInventoryCompleted;
        
        /// <remarks/>
        public event ModifyChannelInventoryCompletedEventHandler ModifyChannelInventoryCompleted;
        
        /// <remarks/>
        public event GetUnLockPidByProductNosCompletedEventHandler GetUnLockPidByProductNosCompleted;
        
        /// <remarks/>
        public event ConfirmCancelOrderRollBackCompletedEventHandler ConfirmCancelOrderRollBackCompleted;
        
        /// <remarks/>
        public event GetInventorySumByValidProductNosCompletedEventHandler GetInventorySumByValidProductNosCompleted;
        
        /// <remarks/>
        public event SplitOrderRollBackCompletedEventHandler SplitOrderRollBackCompleted;
        
        /// <remarks/>
        public event SwapUnLockInventorySumCompletedEventHandler SwapUnLockInventorySumCompleted;
        
        /// <remarks/>
        public event ConfirmChannelOrderCompletedEventHandler ConfirmChannelOrderCompleted;
        
        /// <remarks/>
        public event VirtualProductPackOrderCompletedEventHandler VirtualProductPackOrderCompleted;
        
        /// <remarks/>
        public event TransferOutReturnOrderUnLockCompletedEventHandler TransferOutReturnOrderUnLockCompleted;
        
        /// <remarks/>
        public event GetSkuInventoryBySkuNosCompletedEventHandler GetSkuInventoryBySkuNosCompleted;
        
        /// <remarks/>
        public event GetSkuNoCacheKeyFormatStringCompletedEventHandler GetSkuNoCacheKeyFormatStringCompleted;
        
        /// <remarks/>
        public event GetMemcachedServerCompletedEventHandler GetMemcachedServerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUsableStockQuantity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUsableStockQuantity(string skuNo, int stockFlag) {
            object[] results = this.Invoke("GetUsableStockQuantity", new object[] {
                        skuNo,
                        stockFlag});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUsableStockQuantityAsync(string skuNo, int stockFlag) {
            this.GetUsableStockQuantityAsync(skuNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetUsableStockQuantityAsync(string skuNo, int stockFlag, object userState) {
            if ((this.GetUsableStockQuantityOperationCompleted == null)) {
                this.GetUsableStockQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsableStockQuantityOperationCompleted);
            }
            this.InvokeAsync("GetUsableStockQuantity", new object[] {
                        skuNo,
                        stockFlag}, this.GetUsableStockQuantityOperationCompleted, userState);
        }
        
        private void OnGetUsableStockQuantityOperationCompleted(object arg) {
            if ((this.GetUsableStockQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsableStockQuantityCompleted(this, new GetUsableStockQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventorySum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventorySum(string skuNo, int stockFlag) {
            object[] results = this.Invoke("GetInventorySum", new object[] {
                        skuNo,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySumAsync(string skuNo, int stockFlag) {
            this.GetInventorySumAsync(skuNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetInventorySumAsync(string skuNo, int stockFlag, object userState) {
            if ((this.GetInventorySumOperationCompleted == null)) {
                this.GetInventorySumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySumOperationCompleted);
            }
            this.InvokeAsync("GetInventorySum", new object[] {
                        skuNo,
                        stockFlag}, this.GetInventorySumOperationCompleted, userState);
        }
        
        private void OnGetInventorySumOperationCompleted(object arg) {
            if ((this.GetInventorySumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySumCompleted(this, new GetInventorySumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryWithThreeParameter", RequestElementName="GetInventoryWithThreeParameter", RequestNamespace="http://tempuri.org/", ResponseElementName="GetInventoryWithThreeParameterResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetInventoryWithThreeParameterResult")]
        public string GetInventory(string skuNo, string warehouseNo, int stockFlag) {
            object[] results = this.Invoke("GetInventory", new object[] {
                        skuNo,
                        warehouseNo,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryAsync(string skuNo, string warehouseNo, int stockFlag) {
            this.GetInventoryAsync(skuNo, warehouseNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetInventoryAsync(string skuNo, string warehouseNo, int stockFlag, object userState) {
            if ((this.GetInventoryOperationCompleted == null)) {
                this.GetInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryOperationCompleted);
            }
            this.InvokeAsync("GetInventory", new object[] {
                        skuNo,
                        warehouseNo,
                        stockFlag}, this.GetInventoryOperationCompleted, userState);
        }
        
        private void OnGetInventoryOperationCompleted(object arg) {
            if ((this.GetInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryCompleted(this, new GetInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventorySumList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventorySumList(string xml) {
            object[] results = this.Invoke("GetInventorySumList", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySumListAsync(string xml) {
            this.GetInventorySumListAsync(xml, null);
        }
        
        /// <remarks/>
        public void GetInventorySumListAsync(string xml, object userState) {
            if ((this.GetInventorySumListOperationCompleted == null)) {
                this.GetInventorySumListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySumListOperationCompleted);
            }
            this.InvokeAsync("GetInventorySumList", new object[] {
                        xml}, this.GetInventorySumListOperationCompleted, userState);
        }
        
        private void OnGetInventorySumListOperationCompleted(object arg) {
            if ((this.GetInventorySumListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySumListCompleted(this, new GetInventorySumListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventorySumNoCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventorySumNoCache(string skuNo) {
            object[] results = this.Invoke("GetInventorySumNoCache", new object[] {
                        skuNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySumNoCacheAsync(string skuNo) {
            this.GetInventorySumNoCacheAsync(skuNo, null);
        }
        
        /// <remarks/>
        public void GetInventorySumNoCacheAsync(string skuNo, object userState) {
            if ((this.GetInventorySumNoCacheOperationCompleted == null)) {
                this.GetInventorySumNoCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySumNoCacheOperationCompleted);
            }
            this.InvokeAsync("GetInventorySumNoCache", new object[] {
                        skuNo}, this.GetInventorySumNoCacheOperationCompleted, userState);
        }
        
        private void OnGetInventorySumNoCacheOperationCompleted(object arg) {
            if ((this.GetInventorySumNoCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySumNoCacheCompleted(this, new GetInventorySumNoCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventorySumByProductNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventorySumByProductNo(string productNo, int stockFlag) {
            object[] results = this.Invoke("GetInventorySumByProductNo", new object[] {
                        productNo,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySumByProductNoAsync(string productNo, int stockFlag) {
            this.GetInventorySumByProductNoAsync(productNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetInventorySumByProductNoAsync(string productNo, int stockFlag, object userState) {
            if ((this.GetInventorySumByProductNoOperationCompleted == null)) {
                this.GetInventorySumByProductNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySumByProductNoOperationCompleted);
            }
            this.InvokeAsync("GetInventorySumByProductNo", new object[] {
                        productNo,
                        stockFlag}, this.GetInventorySumByProductNoOperationCompleted, userState);
        }
        
        private void OnGetInventorySumByProductNoOperationCompleted(object arg) {
            if ((this.GetInventorySumByProductNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySumByProductNoCompleted(this, new GetInventorySumByProductNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetErpInventoryPIDRef", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetErpInventoryPIDRef(string pid, int stockFlag) {
            object[] results = this.Invoke("GetErpInventoryPIDRef", new object[] {
                        pid,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetErpInventoryPIDRefAsync(string pid, int stockFlag) {
            this.GetErpInventoryPIDRefAsync(pid, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetErpInventoryPIDRefAsync(string pid, int stockFlag, object userState) {
            if ((this.GetErpInventoryPIDRefOperationCompleted == null)) {
                this.GetErpInventoryPIDRefOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErpInventoryPIDRefOperationCompleted);
            }
            this.InvokeAsync("GetErpInventoryPIDRef", new object[] {
                        pid,
                        stockFlag}, this.GetErpInventoryPIDRefOperationCompleted, userState);
        }
        
        private void OnGetErpInventoryPIDRefOperationCompleted(object arg) {
            if ((this.GetErpInventoryPIDRefCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErpInventoryPIDRefCompleted(this, new GetErpInventoryPIDRefCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsInventoryPIDRefExist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsInventoryPIDRefExist(string skuNo, string warehouseNo, string pid, int stockFlag) {
            object[] results = this.Invoke("IsInventoryPIDRefExist", new object[] {
                        skuNo,
                        warehouseNo,
                        pid,
                        stockFlag});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsInventoryPIDRefExistAsync(string skuNo, string warehouseNo, string pid, int stockFlag) {
            this.IsInventoryPIDRefExistAsync(skuNo, warehouseNo, pid, stockFlag, null);
        }
        
        /// <remarks/>
        public void IsInventoryPIDRefExistAsync(string skuNo, string warehouseNo, string pid, int stockFlag, object userState) {
            if ((this.IsInventoryPIDRefExistOperationCompleted == null)) {
                this.IsInventoryPIDRefExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsInventoryPIDRefExistOperationCompleted);
            }
            this.InvokeAsync("IsInventoryPIDRefExist", new object[] {
                        skuNo,
                        warehouseNo,
                        pid,
                        stockFlag}, this.IsInventoryPIDRefExistOperationCompleted, userState);
        }
        
        private void OnIsInventoryPIDRefExistOperationCompleted(object arg) {
            if ((this.IsInventoryPIDRefExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsInventoryPIDRefExistCompleted(this, new IsInventoryPIDRefExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPidInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPidInfo(string pid) {
            object[] results = this.Invoke("GetPidInfo", new object[] {
                        pid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPidInfoAsync(string pid) {
            this.GetPidInfoAsync(pid, null);
        }
        
        /// <remarks/>
        public void GetPidInfoAsync(string pid, object userState) {
            if ((this.GetPidInfoOperationCompleted == null)) {
                this.GetPidInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPidInfoOperationCompleted);
            }
            this.InvokeAsync("GetPidInfo", new object[] {
                        pid}, this.GetPidInfoOperationCompleted, userState);
        }
        
        private void OnGetPidInfoOperationCompleted(object arg) {
            if ((this.GetPidInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPidInfoCompleted(this, new GetPidInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPidList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPidList(string skuNo, string warehouseNo, int queryQuantity, int stockFlag) {
            object[] results = this.Invoke("GetPidList", new object[] {
                        skuNo,
                        warehouseNo,
                        queryQuantity,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPidListAsync(string skuNo, string warehouseNo, int queryQuantity, int stockFlag) {
            this.GetPidListAsync(skuNo, warehouseNo, queryQuantity, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetPidListAsync(string skuNo, string warehouseNo, int queryQuantity, int stockFlag, object userState) {
            if ((this.GetPidListOperationCompleted == null)) {
                this.GetPidListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPidListOperationCompleted);
            }
            this.InvokeAsync("GetPidList", new object[] {
                        skuNo,
                        warehouseNo,
                        queryQuantity,
                        stockFlag}, this.GetPidListOperationCompleted, userState);
        }
        
        private void OnGetPidListOperationCompleted(object arg) {
            if ((this.GetPidListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPidListCompleted(this, new GetPidListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LockStockCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LockStockCache(string skuNo, int lockQuantity, int stockFlag) {
            object[] results = this.Invoke("LockStockCache", new object[] {
                        skuNo,
                        lockQuantity,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LockStockCacheAsync(string skuNo, int lockQuantity, int stockFlag) {
            this.LockStockCacheAsync(skuNo, lockQuantity, stockFlag, null);
        }
        
        /// <remarks/>
        public void LockStockCacheAsync(string skuNo, int lockQuantity, int stockFlag, object userState) {
            if ((this.LockStockCacheOperationCompleted == null)) {
                this.LockStockCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockStockCacheOperationCompleted);
            }
            this.InvokeAsync("LockStockCache", new object[] {
                        skuNo,
                        lockQuantity,
                        stockFlag}, this.LockStockCacheOperationCompleted, userState);
        }
        
        private void OnLockStockCacheOperationCompleted(object arg) {
            if ((this.LockStockCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockStockCacheCompleted(this, new LockStockCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnlockStockCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnlockStockCache(string skuNo, int unlockQuantity, int stockFlag) {
            object[] results = this.Invoke("UnlockStockCache", new object[] {
                        skuNo,
                        unlockQuantity,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnlockStockCacheAsync(string skuNo, int unlockQuantity, int stockFlag) {
            this.UnlockStockCacheAsync(skuNo, unlockQuantity, stockFlag, null);
        }
        
        /// <remarks/>
        public void UnlockStockCacheAsync(string skuNo, int unlockQuantity, int stockFlag, object userState) {
            if ((this.UnlockStockCacheOperationCompleted == null)) {
                this.UnlockStockCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnlockStockCacheOperationCompleted);
            }
            this.InvokeAsync("UnlockStockCache", new object[] {
                        skuNo,
                        unlockQuantity,
                        stockFlag}, this.UnlockStockCacheOperationCompleted, userState);
        }
        
        private void OnUnlockStockCacheOperationCompleted(object arg) {
            if ((this.UnlockStockCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnlockStockCacheCompleted(this, new UnlockStockCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateOrder(string xml) {
            object[] results = this.Invoke("CreateOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrderAsync(string xml) {
            this.CreateOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void CreateOrderAsync(string xml, object userState) {
            if ((this.CreateOrderOperationCompleted == null)) {
                this.CreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderOperationCompleted);
            }
            this.InvokeAsync("CreateOrder", new object[] {
                        xml}, this.CreateOrderOperationCompleted, userState);
        }
        
        private void OnCreateOrderOperationCompleted(object arg) {
            if ((this.CreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderCompleted(this, new CreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateOrderRollBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateOrderRollBack(string xml) {
            object[] results = this.Invoke("CreateOrderRollBack", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrderRollBackAsync(string xml) {
            this.CreateOrderRollBackAsync(xml, null);
        }
        
        /// <remarks/>
        public void CreateOrderRollBackAsync(string xml, object userState) {
            if ((this.CreateOrderRollBackOperationCompleted == null)) {
                this.CreateOrderRollBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderRollBackOperationCompleted);
            }
            this.InvokeAsync("CreateOrderRollBack", new object[] {
                        xml}, this.CreateOrderRollBackOperationCompleted, userState);
        }
        
        private void OnCreateOrderRollBackOperationCompleted(object arg) {
            if ((this.CreateOrderRollBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderRollBackCompleted(this, new CreateOrderRollBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CancelOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelOrder(string xml) {
            object[] results = this.Invoke("CancelOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelOrderAsync(string xml) {
            this.CancelOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void CancelOrderAsync(string xml, object userState) {
            if ((this.CancelOrderOperationCompleted == null)) {
                this.CancelOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOrderOperationCompleted);
            }
            this.InvokeAsync("CancelOrder", new object[] {
                        xml}, this.CancelOrderOperationCompleted, userState);
        }
        
        private void OnCancelOrderOperationCompleted(object arg) {
            if ((this.CancelOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelOrderCompleted(this, new CancelOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmCancelOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmCancelOrder(string xml) {
            object[] results = this.Invoke("ConfirmCancelOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmCancelOrderAsync(string xml) {
            this.ConfirmCancelOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void ConfirmCancelOrderAsync(string xml, object userState) {
            if ((this.ConfirmCancelOrderOperationCompleted == null)) {
                this.ConfirmCancelOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmCancelOrderOperationCompleted);
            }
            this.InvokeAsync("ConfirmCancelOrder", new object[] {
                        xml}, this.ConfirmCancelOrderOperationCompleted, userState);
        }
        
        private void OnConfirmCancelOrderOperationCompleted(object arg) {
            if ((this.ConfirmCancelOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmCancelOrderCompleted(this, new ConfirmCancelOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SplitOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SplitOrder(string xml) {
            object[] results = this.Invoke("SplitOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SplitOrderAsync(string xml) {
            this.SplitOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void SplitOrderAsync(string xml, object userState) {
            if ((this.SplitOrderOperationCompleted == null)) {
                this.SplitOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitOrderOperationCompleted);
            }
            this.InvokeAsync("SplitOrder", new object[] {
                        xml}, this.SplitOrderOperationCompleted, userState);
        }
        
        private void OnSplitOrderOperationCompleted(object arg) {
            if ((this.SplitOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitOrderCompleted(this, new SplitOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DistributeOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DistributeOrder(string pid, int stockFlag) {
            object[] results = this.Invoke("DistributeOrder", new object[] {
                        pid,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DistributeOrderAsync(string pid, int stockFlag) {
            this.DistributeOrderAsync(pid, stockFlag, null);
        }
        
        /// <remarks/>
        public void DistributeOrderAsync(string pid, int stockFlag, object userState) {
            if ((this.DistributeOrderOperationCompleted == null)) {
                this.DistributeOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDistributeOrderOperationCompleted);
            }
            this.InvokeAsync("DistributeOrder", new object[] {
                        pid,
                        stockFlag}, this.DistributeOrderOperationCompleted, userState);
        }
        
        private void OnDistributeOrderOperationCompleted(object arg) {
            if ((this.DistributeOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DistributeOrderCompleted(this, new DistributeOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PackOrder(string xml) {
            object[] results = this.Invoke("PackOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PackOrderAsync(string xml) {
            this.PackOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void PackOrderAsync(string xml, object userState) {
            if ((this.PackOrderOperationCompleted == null)) {
                this.PackOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPackOrderOperationCompleted);
            }
            this.InvokeAsync("PackOrder", new object[] {
                        xml}, this.PackOrderOperationCompleted, userState);
        }
        
        private void OnPackOrderOperationCompleted(object arg) {
            if ((this.PackOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PackOrderCompleted(this, new PackOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PackOrderRollBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PackOrderRollBack(string xml) {
            object[] results = this.Invoke("PackOrderRollBack", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PackOrderRollBackAsync(string xml) {
            this.PackOrderRollBackAsync(xml, null);
        }
        
        /// <remarks/>
        public void PackOrderRollBackAsync(string xml, object userState) {
            if ((this.PackOrderRollBackOperationCompleted == null)) {
                this.PackOrderRollBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPackOrderRollBackOperationCompleted);
            }
            this.InvokeAsync("PackOrderRollBack", new object[] {
                        xml}, this.PackOrderRollBackOperationCompleted, userState);
        }
        
        private void OnPackOrderRollBackOperationCompleted(object arg) {
            if ((this.PackOrderRollBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PackOrderRollBackCompleted(this, new PackOrderRollBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllocateRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AllocateRequest(string xml) {
            object[] results = this.Invoke("AllocateRequest", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AllocateRequestAsync(string xml) {
            this.AllocateRequestAsync(xml, null);
        }
        
        /// <remarks/>
        public void AllocateRequestAsync(string xml, object userState) {
            if ((this.AllocateRequestOperationCompleted == null)) {
                this.AllocateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocateRequestOperationCompleted);
            }
            this.InvokeAsync("AllocateRequest", new object[] {
                        xml}, this.AllocateRequestOperationCompleted, userState);
        }
        
        private void OnAllocateRequestOperationCompleted(object arg) {
            if ((this.AllocateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocateRequestCompleted(this, new AllocateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllocateAuditSucceed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AllocateAuditSucceed(string xml) {
            object[] results = this.Invoke("AllocateAuditSucceed", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AllocateAuditSucceedAsync(string xml) {
            this.AllocateAuditSucceedAsync(xml, null);
        }
        
        /// <remarks/>
        public void AllocateAuditSucceedAsync(string xml, object userState) {
            if ((this.AllocateAuditSucceedOperationCompleted == null)) {
                this.AllocateAuditSucceedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocateAuditSucceedOperationCompleted);
            }
            this.InvokeAsync("AllocateAuditSucceed", new object[] {
                        xml}, this.AllocateAuditSucceedOperationCompleted, userState);
        }
        
        private void OnAllocateAuditSucceedOperationCompleted(object arg) {
            if ((this.AllocateAuditSucceedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocateAuditSucceedCompleted(this, new AllocateAuditSucceedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AllocateAuditFailed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AllocateAuditFailed(string xml) {
            object[] results = this.Invoke("AllocateAuditFailed", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AllocateAuditFailedAsync(string xml) {
            this.AllocateAuditFailedAsync(xml, null);
        }
        
        /// <remarks/>
        public void AllocateAuditFailedAsync(string xml, object userState) {
            if ((this.AllocateAuditFailedOperationCompleted == null)) {
                this.AllocateAuditFailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllocateAuditFailedOperationCompleted);
            }
            this.InvokeAsync("AllocateAuditFailed", new object[] {
                        xml}, this.AllocateAuditFailedOperationCompleted, userState);
        }
        
        private void OnAllocateAuditFailedOperationCompleted(object arg) {
            if ((this.AllocateAuditFailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllocateAuditFailedCompleted(this, new AllocateAuditFailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SpecialAllocateRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SpecialAllocateRequest(string xml) {
            object[] results = this.Invoke("SpecialAllocateRequest", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialAllocateRequestAsync(string xml) {
            this.SpecialAllocateRequestAsync(xml, null);
        }
        
        /// <remarks/>
        public void SpecialAllocateRequestAsync(string xml, object userState) {
            if ((this.SpecialAllocateRequestOperationCompleted == null)) {
                this.SpecialAllocateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialAllocateRequestOperationCompleted);
            }
            this.InvokeAsync("SpecialAllocateRequest", new object[] {
                        xml}, this.SpecialAllocateRequestOperationCompleted, userState);
        }
        
        private void OnSpecialAllocateRequestOperationCompleted(object arg) {
            if ((this.SpecialAllocateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialAllocateRequestCompleted(this, new SpecialAllocateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SpecialAllocateAuditSucceed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SpecialAllocateAuditSucceed(string xml) {
            object[] results = this.Invoke("SpecialAllocateAuditSucceed", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialAllocateAuditSucceedAsync(string xml) {
            this.SpecialAllocateAuditSucceedAsync(xml, null);
        }
        
        /// <remarks/>
        public void SpecialAllocateAuditSucceedAsync(string xml, object userState) {
            if ((this.SpecialAllocateAuditSucceedOperationCompleted == null)) {
                this.SpecialAllocateAuditSucceedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialAllocateAuditSucceedOperationCompleted);
            }
            this.InvokeAsync("SpecialAllocateAuditSucceed", new object[] {
                        xml}, this.SpecialAllocateAuditSucceedOperationCompleted, userState);
        }
        
        private void OnSpecialAllocateAuditSucceedOperationCompleted(object arg) {
            if ((this.SpecialAllocateAuditSucceedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialAllocateAuditSucceedCompleted(this, new SpecialAllocateAuditSucceedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SpecialAllocateAuditFailed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SpecialAllocateAuditFailed(string xml) {
            object[] results = this.Invoke("SpecialAllocateAuditFailed", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SpecialAllocateAuditFailedAsync(string xml) {
            this.SpecialAllocateAuditFailedAsync(xml, null);
        }
        
        /// <remarks/>
        public void SpecialAllocateAuditFailedAsync(string xml, object userState) {
            if ((this.SpecialAllocateAuditFailedOperationCompleted == null)) {
                this.SpecialAllocateAuditFailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSpecialAllocateAuditFailedOperationCompleted);
            }
            this.InvokeAsync("SpecialAllocateAuditFailed", new object[] {
                        xml}, this.SpecialAllocateAuditFailedOperationCompleted, userState);
        }
        
        private void OnSpecialAllocateAuditFailedOperationCompleted(object arg) {
            if ((this.SpecialAllocateAuditFailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SpecialAllocateAuditFailedCompleted(this, new SpecialAllocateAuditFailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOrderStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOrderStock(string xml) {
            object[] results = this.Invoke("TransferOrderStock", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOrderStockAsync(string xml) {
            this.TransferOrderStockAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOrderStockAsync(string xml, object userState) {
            if ((this.TransferOrderStockOperationCompleted == null)) {
                this.TransferOrderStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOrderStockOperationCompleted);
            }
            this.InvokeAsync("TransferOrderStock", new object[] {
                        xml}, this.TransferOrderStockOperationCompleted, userState);
        }
        
        private void OnTransferOrderStockOperationCompleted(object arg) {
            if ((this.TransferOrderStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOrderStockCompleted(this, new TransferOrderStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PurchaseInStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PurchaseInStock(string xml) {
            object[] results = this.Invoke("PurchaseInStock", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseInStockAsync(string xml) {
            this.PurchaseInStockAsync(xml, null);
        }
        
        /// <remarks/>
        public void PurchaseInStockAsync(string xml, object userState) {
            if ((this.PurchaseInStockOperationCompleted == null)) {
                this.PurchaseInStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseInStockOperationCompleted);
            }
            this.InvokeAsync("PurchaseInStock", new object[] {
                        xml}, this.PurchaseInStockOperationCompleted, userState);
        }
        
        private void OnPurchaseInStockOperationCompleted(object arg) {
            if ((this.PurchaseInStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseInStockCompleted(this, new PurchaseInStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReceiveProduct(string xml) {
            object[] results = this.Invoke("ReceiveProduct", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveProductAsync(string xml) {
            this.ReceiveProductAsync(xml, null);
        }
        
        /// <remarks/>
        public void ReceiveProductAsync(string xml, object userState) {
            if ((this.ReceiveProductOperationCompleted == null)) {
                this.ReceiveProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveProductOperationCompleted);
            }
            this.InvokeAsync("ReceiveProduct", new object[] {
                        xml}, this.ReceiveProductOperationCompleted, userState);
        }
        
        private void OnReceiveProductOperationCompleted(object arg) {
            if ((this.ReceiveProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveProductCompleted(this, new ReceiveProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnBeforeDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReturnBeforeDelivery(string xml) {
            object[] results = this.Invoke("ReturnBeforeDelivery", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnBeforeDeliveryAsync(string xml) {
            this.ReturnBeforeDeliveryAsync(xml, null);
        }
        
        /// <remarks/>
        public void ReturnBeforeDeliveryAsync(string xml, object userState) {
            if ((this.ReturnBeforeDeliveryOperationCompleted == null)) {
                this.ReturnBeforeDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnBeforeDeliveryOperationCompleted);
            }
            this.InvokeAsync("ReturnBeforeDelivery", new object[] {
                        xml}, this.ReturnBeforeDeliveryOperationCompleted, userState);
        }
        
        private void OnReturnBeforeDeliveryOperationCompleted(object arg) {
            if ((this.ReturnBeforeDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnBeforeDeliveryCompleted(this, new ReturnBeforeDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReturnAfterDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReturnAfterDelivery(string xml) {
            object[] results = this.Invoke("ReturnAfterDelivery", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnAfterDeliveryAsync(string xml) {
            this.ReturnAfterDeliveryAsync(xml, null);
        }
        
        /// <remarks/>
        public void ReturnAfterDeliveryAsync(string xml, object userState) {
            if ((this.ReturnAfterDeliveryOperationCompleted == null)) {
                this.ReturnAfterDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnAfterDeliveryOperationCompleted);
            }
            this.InvokeAsync("ReturnAfterDelivery", new object[] {
                        xml}, this.ReturnAfterDeliveryOperationCompleted, userState);
        }
        
        private void OnReturnAfterDeliveryOperationCompleted(object arg) {
            if ((this.ReturnAfterDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnAfterDeliveryCompleted(this, new ReturnAfterDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BackRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BackRequest(string xml) {
            object[] results = this.Invoke("BackRequest", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackRequestAsync(string xml) {
            this.BackRequestAsync(xml, null);
        }
        
        /// <remarks/>
        public void BackRequestAsync(string xml, object userState) {
            if ((this.BackRequestOperationCompleted == null)) {
                this.BackRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackRequestOperationCompleted);
            }
            this.InvokeAsync("BackRequest", new object[] {
                        xml}, this.BackRequestOperationCompleted, userState);
        }
        
        private void OnBackRequestOperationCompleted(object arg) {
            if ((this.BackRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackRequestCompleted(this, new BackRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BackAuditSucceed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BackAuditSucceed(string xml) {
            object[] results = this.Invoke("BackAuditSucceed", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackAuditSucceedAsync(string xml) {
            this.BackAuditSucceedAsync(xml, null);
        }
        
        /// <remarks/>
        public void BackAuditSucceedAsync(string xml, object userState) {
            if ((this.BackAuditSucceedOperationCompleted == null)) {
                this.BackAuditSucceedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackAuditSucceedOperationCompleted);
            }
            this.InvokeAsync("BackAuditSucceed", new object[] {
                        xml}, this.BackAuditSucceedOperationCompleted, userState);
        }
        
        private void OnBackAuditSucceedOperationCompleted(object arg) {
            if ((this.BackAuditSucceedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackAuditSucceedCompleted(this, new BackAuditSucceedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BackAuditFailed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BackAuditFailed(string xml) {
            object[] results = this.Invoke("BackAuditFailed", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackAuditFailedAsync(string xml) {
            this.BackAuditFailedAsync(xml, null);
        }
        
        /// <remarks/>
        public void BackAuditFailedAsync(string xml, object userState) {
            if ((this.BackAuditFailedOperationCompleted == null)) {
                this.BackAuditFailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackAuditFailedOperationCompleted);
            }
            this.InvokeAsync("BackAuditFailed", new object[] {
                        xml}, this.BackAuditFailedOperationCompleted, userState);
        }
        
        private void OnBackAuditFailedOperationCompleted(object arg) {
            if ((this.BackAuditFailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackAuditFailedCompleted(this, new BackAuditFailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/BackRequestPidCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BackRequestPidCancel(string pid, string skuNo, int skuType, string warehouseNo, string backOrderNo, string operatorName, int stockFlag) {
            object[] results = this.Invoke("BackRequestPidCancel", new object[] {
                        pid,
                        skuNo,
                        skuType,
                        warehouseNo,
                        backOrderNo,
                        operatorName,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BackRequestPidCancelAsync(string pid, string skuNo, int skuType, string warehouseNo, string backOrderNo, string operatorName, int stockFlag) {
            this.BackRequestPidCancelAsync(pid, skuNo, skuType, warehouseNo, backOrderNo, operatorName, stockFlag, null);
        }
        
        /// <remarks/>
        public void BackRequestPidCancelAsync(string pid, string skuNo, int skuType, string warehouseNo, string backOrderNo, string operatorName, int stockFlag, object userState) {
            if ((this.BackRequestPidCancelOperationCompleted == null)) {
                this.BackRequestPidCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackRequestPidCancelOperationCompleted);
            }
            this.InvokeAsync("BackRequestPidCancel", new object[] {
                        pid,
                        skuNo,
                        skuType,
                        warehouseNo,
                        backOrderNo,
                        operatorName,
                        stockFlag}, this.BackRequestPidCancelOperationCompleted, userState);
        }
        
        private void OnBackRequestPidCancelOperationCompleted(object arg) {
            if ((this.BackRequestPidCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackRequestPidCancelCompleted(this, new BackRequestPidCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyLogisticsNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyLogisticsNo(string xml) {
            object[] results = this.Invoke("ModifyLogisticsNo", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyLogisticsNoAsync(string xml) {
            this.ModifyLogisticsNoAsync(xml, null);
        }
        
        /// <remarks/>
        public void ModifyLogisticsNoAsync(string xml, object userState) {
            if ((this.ModifyLogisticsNoOperationCompleted == null)) {
                this.ModifyLogisticsNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyLogisticsNoOperationCompleted);
            }
            this.InvokeAsync("ModifyLogisticsNo", new object[] {
                        xml}, this.ModifyLogisticsNoOperationCompleted, userState);
        }
        
        private void OnModifyLogisticsNoOperationCompleted(object arg) {
            if ((this.ModifyLogisticsNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyLogisticsNoCompleted(this, new ModifyLogisticsNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyStorePositionNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyStorePositionNo(string pid, string storePositionNo, int stockFlag) {
            object[] results = this.Invoke("ModifyStorePositionNo", new object[] {
                        pid,
                        storePositionNo,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyStorePositionNoAsync(string pid, string storePositionNo, int stockFlag) {
            this.ModifyStorePositionNoAsync(pid, storePositionNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void ModifyStorePositionNoAsync(string pid, string storePositionNo, int stockFlag, object userState) {
            if ((this.ModifyStorePositionNoOperationCompleted == null)) {
                this.ModifyStorePositionNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyStorePositionNoOperationCompleted);
            }
            this.InvokeAsync("ModifyStorePositionNo", new object[] {
                        pid,
                        storePositionNo,
                        stockFlag}, this.ModifyStorePositionNoOperationCompleted, userState);
        }
        
        private void OnModifyStorePositionNoOperationCompleted(object arg) {
            if ((this.ModifyStorePositionNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyStorePositionNoCompleted(this, new ModifyStorePositionNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertOrderType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertOrderType(string xml) {
            object[] results = this.Invoke("ConvertOrderType", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertOrderTypeAsync(string xml) {
            this.ConvertOrderTypeAsync(xml, null);
        }
        
        /// <remarks/>
        public void ConvertOrderTypeAsync(string xml, object userState) {
            if ((this.ConvertOrderTypeOperationCompleted == null)) {
                this.ConvertOrderTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertOrderTypeOperationCompleted);
            }
            this.InvokeAsync("ConvertOrderType", new object[] {
                        xml}, this.ConvertOrderTypeOperationCompleted, userState);
        }
        
        private void OnConvertOrderTypeOperationCompleted(object arg) {
            if ((this.ConvertOrderTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertOrderTypeCompleted(this, new ConvertOrderTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConvertSkuType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConvertSkuType(string xml) {
            object[] results = this.Invoke("ConvertSkuType", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConvertSkuTypeAsync(string xml) {
            this.ConvertSkuTypeAsync(xml, null);
        }
        
        /// <remarks/>
        public void ConvertSkuTypeAsync(string xml, object userState) {
            if ((this.ConvertSkuTypeOperationCompleted == null)) {
                this.ConvertSkuTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConvertSkuTypeOperationCompleted);
            }
            this.InvokeAsync("ConvertSkuType", new object[] {
                        xml}, this.ConvertSkuTypeOperationCompleted, userState);
        }
        
        private void OnConvertSkuTypeOperationCompleted(object arg) {
            if ((this.ConvertSkuTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConvertSkuTypeCompleted(this, new ConvertSkuTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyConsignVirtualStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyConsignVirtualStock(string xml) {
            object[] results = this.Invoke("ModifyConsignVirtualStock", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyConsignVirtualStockAsync(string xml) {
            this.ModifyConsignVirtualStockAsync(xml, null);
        }
        
        /// <remarks/>
        public void ModifyConsignVirtualStockAsync(string xml, object userState) {
            if ((this.ModifyConsignVirtualStockOperationCompleted == null)) {
                this.ModifyConsignVirtualStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyConsignVirtualStockOperationCompleted);
            }
            this.InvokeAsync("ModifyConsignVirtualStock", new object[] {
                        xml}, this.ModifyConsignVirtualStockOperationCompleted, userState);
        }
        
        private void OnModifyConsignVirtualStockOperationCompleted(object arg) {
            if ((this.ModifyConsignVirtualStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyConsignVirtualStockCompleted(this, new ModifyConsignVirtualStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ProductTransfer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProductTransfer(string xml) {
            object[] results = this.Invoke("ProductTransfer", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProductTransferAsync(string xml) {
            this.ProductTransferAsync(xml, null);
        }
        
        /// <remarks/>
        public void ProductTransferAsync(string xml, object userState) {
            if ((this.ProductTransferOperationCompleted == null)) {
                this.ProductTransferOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProductTransferOperationCompleted);
            }
            this.InvokeAsync("ProductTransfer", new object[] {
                        xml}, this.ProductTransferOperationCompleted, userState);
        }
        
        private void OnProductTransferOperationCompleted(object arg) {
            if ((this.ProductTransferCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProductTransferCompleted(this, new ProductTransferCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LendRequest", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LendRequest(string xml) {
            object[] results = this.Invoke("LendRequest", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LendRequestAsync(string xml) {
            this.LendRequestAsync(xml, null);
        }
        
        /// <remarks/>
        public void LendRequestAsync(string xml, object userState) {
            if ((this.LendRequestOperationCompleted == null)) {
                this.LendRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLendRequestOperationCompleted);
            }
            this.InvokeAsync("LendRequest", new object[] {
                        xml}, this.LendRequestOperationCompleted, userState);
        }
        
        private void OnLendRequestOperationCompleted(object arg) {
            if ((this.LendRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LendRequestCompleted(this, new LendRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LendAuditFailed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LendAuditFailed(string xml) {
            object[] results = this.Invoke("LendAuditFailed", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LendAuditFailedAsync(string xml) {
            this.LendAuditFailedAsync(xml, null);
        }
        
        /// <remarks/>
        public void LendAuditFailedAsync(string xml, object userState) {
            if ((this.LendAuditFailedOperationCompleted == null)) {
                this.LendAuditFailedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLendAuditFailedOperationCompleted);
            }
            this.InvokeAsync("LendAuditFailed", new object[] {
                        xml}, this.LendAuditFailedOperationCompleted, userState);
        }
        
        private void OnLendAuditFailedOperationCompleted(object arg) {
            if ((this.LendAuditFailedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LendAuditFailedCompleted(this, new LendAuditFailedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LendGiveBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LendGiveBack(string xml) {
            object[] results = this.Invoke("LendGiveBack", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LendGiveBackAsync(string xml) {
            this.LendGiveBackAsync(xml, null);
        }
        
        /// <remarks/>
        public void LendGiveBackAsync(string xml, object userState) {
            if ((this.LendGiveBackOperationCompleted == null)) {
                this.LendGiveBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLendGiveBackOperationCompleted);
            }
            this.InvokeAsync("LendGiveBack", new object[] {
                        xml}, this.LendGiveBackOperationCompleted, userState);
        }
        
        private void OnLendGiveBackOperationCompleted(object arg) {
            if ((this.LendGiveBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LendGiveBackCompleted(this, new LendGiveBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferConsignVirtualStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferConsignVirtualStock(string xml) {
            object[] results = this.Invoke("TransferConsignVirtualStock", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferConsignVirtualStockAsync(string xml) {
            this.TransferConsignVirtualStockAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferConsignVirtualStockAsync(string xml, object userState) {
            if ((this.TransferConsignVirtualStockOperationCompleted == null)) {
                this.TransferConsignVirtualStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferConsignVirtualStockOperationCompleted);
            }
            this.InvokeAsync("TransferConsignVirtualStock", new object[] {
                        xml}, this.TransferConsignVirtualStockOperationCompleted, userState);
        }
        
        private void OnTransferConsignVirtualStockOperationCompleted(object arg) {
            if ((this.TransferConsignVirtualStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferConsignVirtualStockCompleted(this, new TransferConsignVirtualStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StockTaking", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string StockTaking(string xml) {
            object[] results = this.Invoke("StockTaking", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void StockTakingAsync(string xml) {
            this.StockTakingAsync(xml, null);
        }
        
        /// <remarks/>
        public void StockTakingAsync(string xml, object userState) {
            if ((this.StockTakingOperationCompleted == null)) {
                this.StockTakingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStockTakingOperationCompleted);
            }
            this.InvokeAsync("StockTaking", new object[] {
                        xml}, this.StockTakingOperationCompleted, userState);
        }
        
        private void OnStockTakingOperationCompleted(object arg) {
            if ((this.StockTakingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StockTakingCompleted(this, new StockTakingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOut", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOut(string xml) {
            object[] results = this.Invoke("TransferOut", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutAsync(string xml) {
            this.TransferOutAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOutAsync(string xml, object userState) {
            if ((this.TransferOutOperationCompleted == null)) {
                this.TransferOutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutOperationCompleted);
            }
            this.InvokeAsync("TransferOut", new object[] {
                        xml}, this.TransferOutOperationCompleted, userState);
        }
        
        private void OnTransferOutOperationCompleted(object arg) {
            if ((this.TransferOutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutCompleted(this, new TransferOutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOutCancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOutCancel(string xml) {
            object[] results = this.Invoke("TransferOutCancel", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutCancelAsync(string xml) {
            this.TransferOutCancelAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOutCancelAsync(string xml, object userState) {
            if ((this.TransferOutCancelOperationCompleted == null)) {
                this.TransferOutCancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutCancelOperationCompleted);
            }
            this.InvokeAsync("TransferOutCancel", new object[] {
                        xml}, this.TransferOutCancelOperationCompleted, userState);
        }
        
        private void OnTransferOutCancelOperationCompleted(object arg) {
            if ((this.TransferOutCancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutCancelCompleted(this, new TransferOutCancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferIn(string xml) {
            object[] results = this.Invoke("TransferIn", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferInAsync(string xml) {
            this.TransferInAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferInAsync(string xml, object userState) {
            if ((this.TransferInOperationCompleted == null)) {
                this.TransferInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferInOperationCompleted);
            }
            this.InvokeAsync("TransferIn", new object[] {
                        xml}, this.TransferInOperationCompleted, userState);
        }
        
        private void OnTransferInOperationCompleted(object arg) {
            if ((this.TransferInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferInCompleted(this, new TransferInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOutCreateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOutCreateOrder(string xml) {
            object[] results = this.Invoke("TransferOutCreateOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutCreateOrderAsync(string xml) {
            this.TransferOutCreateOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOutCreateOrderAsync(string xml, object userState) {
            if ((this.TransferOutCreateOrderOperationCompleted == null)) {
                this.TransferOutCreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutCreateOrderOperationCompleted);
            }
            this.InvokeAsync("TransferOutCreateOrder", new object[] {
                        xml}, this.TransferOutCreateOrderOperationCompleted, userState);
        }
        
        private void OnTransferOutCreateOrderOperationCompleted(object arg) {
            if ((this.TransferOutCreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutCreateOrderCompleted(this, new TransferOutCreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOutReturnOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOutReturnOrder(string xml) {
            object[] results = this.Invoke("TransferOutReturnOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutReturnOrderAsync(string xml) {
            this.TransferOutReturnOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOutReturnOrderAsync(string xml, object userState) {
            if ((this.TransferOutReturnOrderOperationCompleted == null)) {
                this.TransferOutReturnOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutReturnOrderOperationCompleted);
            }
            this.InvokeAsync("TransferOutReturnOrder", new object[] {
                        xml}, this.TransferOutReturnOrderOperationCompleted, userState);
        }
        
        private void OnTransferOutReturnOrderOperationCompleted(object arg) {
            if ((this.TransferOutReturnOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutReturnOrderCompleted(this, new TransferOutReturnOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOutExchangePid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOutExchangePid(string xml) {
            object[] results = this.Invoke("TransferOutExchangePid", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutExchangePidAsync(string xml) {
            this.TransferOutExchangePidAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOutExchangePidAsync(string xml, object userState) {
            if ((this.TransferOutExchangePidOperationCompleted == null)) {
                this.TransferOutExchangePidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutExchangePidOperationCompleted);
            }
            this.InvokeAsync("TransferOutExchangePid", new object[] {
                        xml}, this.TransferOutExchangePidOperationCompleted, userState);
        }
        
        private void OnTransferOutExchangePidOperationCompleted(object arg) {
            if ((this.TransferOutExchangePidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutExchangePidCompleted(this, new TransferOutExchangePidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOutValidate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOutValidate(string xml) {
            object[] results = this.Invoke("TransferOutValidate", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutValidateAsync(string xml) {
            this.TransferOutValidateAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOutValidateAsync(string xml, object userState) {
            if ((this.TransferOutValidateOperationCompleted == null)) {
                this.TransferOutValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutValidateOperationCompleted);
            }
            this.InvokeAsync("TransferOutValidate", new object[] {
                        xml}, this.TransferOutValidateOperationCompleted, userState);
        }
        
        private void OnTransferOutValidateOperationCompleted(object arg) {
            if ((this.TransferOutValidateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutValidateCompleted(this, new TransferOutValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RepairBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RepairBack(string xml) {
            object[] results = this.Invoke("RepairBack", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RepairBackAsync(string xml) {
            this.RepairBackAsync(xml, null);
        }
        
        /// <remarks/>
        public void RepairBackAsync(string xml, object userState) {
            if ((this.RepairBackOperationCompleted == null)) {
                this.RepairBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRepairBackOperationCompleted);
            }
            this.InvokeAsync("RepairBack", new object[] {
                        xml}, this.RepairBackOperationCompleted, userState);
        }
        
        private void OnRepairBackOperationCompleted(object arg) {
            if ((this.RepairBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RepairBackCompleted(this, new RepairBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VirtualProductCreateOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VirtualProductCreateOrder(string xml) {
            object[] results = this.Invoke("VirtualProductCreateOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VirtualProductCreateOrderAsync(string xml) {
            this.VirtualProductCreateOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void VirtualProductCreateOrderAsync(string xml, object userState) {
            if ((this.VirtualProductCreateOrderOperationCompleted == null)) {
                this.VirtualProductCreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVirtualProductCreateOrderOperationCompleted);
            }
            this.InvokeAsync("VirtualProductCreateOrder", new object[] {
                        xml}, this.VirtualProductCreateOrderOperationCompleted, userState);
        }
        
        private void OnVirtualProductCreateOrderOperationCompleted(object arg) {
            if ((this.VirtualProductCreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VirtualProductCreateOrderCompleted(this, new VirtualProductCreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LockPid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LockPid(string pid, int stockFlag) {
            object[] results = this.Invoke("LockPid", new object[] {
                        pid,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LockPidAsync(string pid, int stockFlag) {
            this.LockPidAsync(pid, stockFlag, null);
        }
        
        /// <remarks/>
        public void LockPidAsync(string pid, int stockFlag, object userState) {
            if ((this.LockPidOperationCompleted == null)) {
                this.LockPidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLockPidOperationCompleted);
            }
            this.InvokeAsync("LockPid", new object[] {
                        pid,
                        stockFlag}, this.LockPidOperationCompleted, userState);
        }
        
        private void OnLockPidOperationCompleted(object arg) {
            if ((this.LockPidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LockPidCompleted(this, new LockPidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UnLockPid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UnLockPid(string pid, int stockFlag) {
            object[] results = this.Invoke("UnLockPid", new object[] {
                        pid,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UnLockPidAsync(string pid, int stockFlag) {
            this.UnLockPidAsync(pid, stockFlag, null);
        }
        
        /// <remarks/>
        public void UnLockPidAsync(string pid, int stockFlag, object userState) {
            if ((this.UnLockPidOperationCompleted == null)) {
                this.UnLockPidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnLockPidOperationCompleted);
            }
            this.InvokeAsync("UnLockPid", new object[] {
                        pid,
                        stockFlag}, this.UnLockPidOperationCompleted, userState);
        }
        
        private void OnUnLockPidOperationCompleted(object arg) {
            if ((this.UnLockPidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnLockPidCompleted(this, new UnLockPidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetStockFlagByPid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStockFlagByPid(string pid) {
            object[] results = this.Invoke("GetStockFlagByPid", new object[] {
                        pid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStockFlagByPidAsync(string pid) {
            this.GetStockFlagByPidAsync(pid, null);
        }
        
        /// <remarks/>
        public void GetStockFlagByPidAsync(string pid, object userState) {
            if ((this.GetStockFlagByPidOperationCompleted == null)) {
                this.GetStockFlagByPidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStockFlagByPidOperationCompleted);
            }
            this.InvokeAsync("GetStockFlagByPid", new object[] {
                        pid}, this.GetStockFlagByPidOperationCompleted, userState);
        }
        
        private void OnGetStockFlagByPidOperationCompleted(object arg) {
            if ((this.GetStockFlagByPidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStockFlagByPidCompleted(this, new GetStockFlagByPidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetConsignEntityIventoryQuantity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetConsignEntityIventoryQuantity(string skuNo) {
            object[] results = this.Invoke("GetConsignEntityIventoryQuantity", new object[] {
                        skuNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetConsignEntityIventoryQuantityAsync(string skuNo) {
            this.GetConsignEntityIventoryQuantityAsync(skuNo, null);
        }
        
        /// <remarks/>
        public void GetConsignEntityIventoryQuantityAsync(string skuNo, object userState) {
            if ((this.GetConsignEntityIventoryQuantityOperationCompleted == null)) {
                this.GetConsignEntityIventoryQuantityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConsignEntityIventoryQuantityOperationCompleted);
            }
            this.InvokeAsync("GetConsignEntityIventoryQuantity", new object[] {
                        skuNo}, this.GetConsignEntityIventoryQuantityOperationCompleted, userState);
        }
        
        private void OnGetConsignEntityIventoryQuantityOperationCompleted(object arg) {
            if ((this.GetConsignEntityIventoryQuantityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConsignEntityIventoryQuantityCompleted(this, new GetConsignEntityIventoryQuantityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventorySumByProductNos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventorySumByProductNos(string productNos) {
            object[] results = this.Invoke("GetInventorySumByProductNos", new object[] {
                        productNos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySumByProductNosAsync(string productNos) {
            this.GetInventorySumByProductNosAsync(productNos, null);
        }
        
        /// <remarks/>
        public void GetInventorySumByProductNosAsync(string productNos, object userState) {
            if ((this.GetInventorySumByProductNosOperationCompleted == null)) {
                this.GetInventorySumByProductNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySumByProductNosOperationCompleted);
            }
            this.InvokeAsync("GetInventorySumByProductNos", new object[] {
                        productNos}, this.GetInventorySumByProductNosOperationCompleted, userState);
        }
        
        private void OnGetInventorySumByProductNosOperationCompleted(object arg) {
            if ((this.GetInventorySumByProductNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySumByProductNosCompleted(this, new GetInventorySumByProductNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SwapLockInventorySum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SwapLockInventorySum(string xml) {
            object[] results = this.Invoke("SwapLockInventorySum", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SwapLockInventorySumAsync(string xml) {
            this.SwapLockInventorySumAsync(xml, null);
        }
        
        /// <remarks/>
        public void SwapLockInventorySumAsync(string xml, object userState) {
            if ((this.SwapLockInventorySumOperationCompleted == null)) {
                this.SwapLockInventorySumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapLockInventorySumOperationCompleted);
            }
            this.InvokeAsync("SwapLockInventorySum", new object[] {
                        xml}, this.SwapLockInventorySumOperationCompleted, userState);
        }
        
        private void OnSwapLockInventorySumOperationCompleted(object arg) {
            if ((this.SwapLockInventorySumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapLockInventorySumCompleted(this, new SwapLockInventorySumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteReceiveProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DeleteReceiveProduct(string xml) {
            object[] results = this.Invoke("DeleteReceiveProduct", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReceiveProductAsync(string xml) {
            this.DeleteReceiveProductAsync(xml, null);
        }
        
        /// <remarks/>
        public void DeleteReceiveProductAsync(string xml, object userState) {
            if ((this.DeleteReceiveProductOperationCompleted == null)) {
                this.DeleteReceiveProductOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReceiveProductOperationCompleted);
            }
            this.InvokeAsync("DeleteReceiveProduct", new object[] {
                        xml}, this.DeleteReceiveProductOperationCompleted, userState);
        }
        
        private void OnDeleteReceiveProductOperationCompleted(object arg) {
            if ((this.DeleteReceiveProductCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReceiveProductCompleted(this, new DeleteReceiveProductCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCache(string skuNo, int stockFlag) {
            object[] results = this.Invoke("GetCache", new object[] {
                        skuNo,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCacheAsync(string skuNo, int stockFlag) {
            this.GetCacheAsync(skuNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetCacheAsync(string skuNo, int stockFlag, object userState) {
            if ((this.GetCacheOperationCompleted == null)) {
                this.GetCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCacheOperationCompleted);
            }
            this.InvokeAsync("GetCache", new object[] {
                        skuNo,
                        stockFlag}, this.GetCacheOperationCompleted, userState);
        }
        
        private void OnGetCacheOperationCompleted(object arg) {
            if ((this.GetCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCacheCompleted(this, new GetCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveCache", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RemoveCache(string skuNo, int stockFlag) {
            object[] results = this.Invoke("RemoveCache", new object[] {
                        skuNo,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveCacheAsync(string skuNo, int stockFlag) {
            this.RemoveCacheAsync(skuNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void RemoveCacheAsync(string skuNo, int stockFlag, object userState) {
            if ((this.RemoveCacheOperationCompleted == null)) {
                this.RemoveCacheOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveCacheOperationCompleted);
            }
            this.InvokeAsync("RemoveCache", new object[] {
                        skuNo,
                        stockFlag}, this.RemoveCacheOperationCompleted, userState);
        }
        
        private void OnRemoveCacheOperationCompleted(object arg) {
            if ((this.RemoveCacheCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveCacheCompleted(this, new RemoveCacheCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryChangeLog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventoryChangeLog(string skuNo, int inventoryFlag, int stockFlag, int changeType, string dateBegin, string dateEnd, int pageSize, int pageIndex) {
            object[] results = this.Invoke("GetInventoryChangeLog", new object[] {
                        skuNo,
                        inventoryFlag,
                        stockFlag,
                        changeType,
                        dateBegin,
                        dateEnd,
                        pageSize,
                        pageIndex});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryChangeLogAsync(string skuNo, int inventoryFlag, int stockFlag, int changeType, string dateBegin, string dateEnd, int pageSize, int pageIndex) {
            this.GetInventoryChangeLogAsync(skuNo, inventoryFlag, stockFlag, changeType, dateBegin, dateEnd, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetInventoryChangeLogAsync(string skuNo, int inventoryFlag, int stockFlag, int changeType, string dateBegin, string dateEnd, int pageSize, int pageIndex, object userState) {
            if ((this.GetInventoryChangeLogOperationCompleted == null)) {
                this.GetInventoryChangeLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryChangeLogOperationCompleted);
            }
            this.InvokeAsync("GetInventoryChangeLog", new object[] {
                        skuNo,
                        inventoryFlag,
                        stockFlag,
                        changeType,
                        dateBegin,
                        dateEnd,
                        pageSize,
                        pageIndex}, this.GetInventoryChangeLogOperationCompleted, userState);
        }
        
        private void OnGetInventoryChangeLogOperationCompleted(object arg) {
            if ((this.GetInventoryChangeLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryChangeLogCompleted(this, new GetInventoryChangeLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetInventorySumNoCache1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventorySumNoCacheWithThreeParameter", RequestElementName="GetInventorySumNoCacheWithThreeParameter", RequestNamespace="http://tempuri.org/", ResponseElementName="GetInventorySumNoCacheWithThreeParameterResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetInventorySumNoCacheWithThreeParameterResult")]
        public string GetInventorySumNoCache(string skuNo, int skuType, int stockFlag) {
            object[] results = this.Invoke("GetInventorySumNoCache1", new object[] {
                        skuNo,
                        skuType,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySumNoCache1Async(string skuNo, int skuType, int stockFlag) {
            this.GetInventorySumNoCache1Async(skuNo, skuType, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetInventorySumNoCache1Async(string skuNo, int skuType, int stockFlag, object userState) {
            if ((this.GetInventorySumNoCache1OperationCompleted == null)) {
                this.GetInventorySumNoCache1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySumNoCache1OperationCompleted);
            }
            this.InvokeAsync("GetInventorySumNoCache1", new object[] {
                        skuNo,
                        skuType,
                        stockFlag}, this.GetInventorySumNoCache1OperationCompleted, userState);
        }
        
        private void OnGetInventorySumNoCache1OperationCompleted(object arg) {
            if ((this.GetInventorySumNoCache1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySumNoCache1Completed(this, new GetInventorySumNoCache1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="GetInventory1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventory", RequestElementName="GetInventory", RequestNamespace="http://tempuri.org/", ResponseElementName="GetInventoryResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetInventoryResult")]
        public string GetInventory(string skuNo, int stockFlag) {
            object[] results = this.Invoke("GetInventory1", new object[] {
                        skuNo,
                        stockFlag});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventory1Async(string skuNo, int stockFlag) {
            this.GetInventory1Async(skuNo, stockFlag, null);
        }
        
        /// <remarks/>
        public void GetInventory1Async(string skuNo, int stockFlag, object userState) {
            if ((this.GetInventory1OperationCompleted == null)) {
                this.GetInventory1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventory1OperationCompleted);
            }
            this.InvokeAsync("GetInventory1", new object[] {
                        skuNo,
                        stockFlag}, this.GetInventory1OperationCompleted, userState);
        }
        
        private void OnGetInventory1OperationCompleted(object arg) {
            if ((this.GetInventory1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventory1Completed(this, new GetInventory1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventoryPIDRefBySkuNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventoryPIDRefBySkuNo(string skuNo, int stockFlag, int pageSize, int pageIndex) {
            object[] results = this.Invoke("GetInventoryPIDRefBySkuNo", new object[] {
                        skuNo,
                        stockFlag,
                        pageSize,
                        pageIndex});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventoryPIDRefBySkuNoAsync(string skuNo, int stockFlag, int pageSize, int pageIndex) {
            this.GetInventoryPIDRefBySkuNoAsync(skuNo, stockFlag, pageSize, pageIndex, null);
        }
        
        /// <remarks/>
        public void GetInventoryPIDRefBySkuNoAsync(string skuNo, int stockFlag, int pageSize, int pageIndex, object userState) {
            if ((this.GetInventoryPIDRefBySkuNoOperationCompleted == null)) {
                this.GetInventoryPIDRefBySkuNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventoryPIDRefBySkuNoOperationCompleted);
            }
            this.InvokeAsync("GetInventoryPIDRefBySkuNo", new object[] {
                        skuNo,
                        stockFlag,
                        pageSize,
                        pageIndex}, this.GetInventoryPIDRefBySkuNoOperationCompleted, userState);
        }
        
        private void OnGetInventoryPIDRefBySkuNoOperationCompleted(object arg) {
            if ((this.GetInventoryPIDRefBySkuNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventoryPIDRefBySkuNoCompleted(this, new GetInventoryPIDRefBySkuNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateNormalInventorySum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateNormalInventorySum(string SkuNo, string ProductNo, int SkuType, int Quantity, string operatorName) {
            object[] results = this.Invoke("UpdateNormalInventorySum", new object[] {
                        SkuNo,
                        ProductNo,
                        SkuType,
                        Quantity,
                        operatorName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNormalInventorySumAsync(string SkuNo, string ProductNo, int SkuType, int Quantity, string operatorName) {
            this.UpdateNormalInventorySumAsync(SkuNo, ProductNo, SkuType, Quantity, operatorName, null);
        }
        
        /// <remarks/>
        public void UpdateNormalInventorySumAsync(string SkuNo, string ProductNo, int SkuType, int Quantity, string operatorName, object userState) {
            if ((this.UpdateNormalInventorySumOperationCompleted == null)) {
                this.UpdateNormalInventorySumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNormalInventorySumOperationCompleted);
            }
            this.InvokeAsync("UpdateNormalInventorySum", new object[] {
                        SkuNo,
                        ProductNo,
                        SkuType,
                        Quantity,
                        operatorName}, this.UpdateNormalInventorySumOperationCompleted, userState);
        }
        
        private void OnUpdateNormalInventorySumOperationCompleted(object arg) {
            if ((this.UpdateNormalInventorySumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNormalInventorySumCompleted(this, new UpdateNormalInventorySumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateNormalWareHouseInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateNormalWareHouseInventory(string SkuNo, string ProductNo, string WareHouseNo, int Quantity, string operatorName) {
            object[] results = this.Invoke("UpdateNormalWareHouseInventory", new object[] {
                        SkuNo,
                        ProductNo,
                        WareHouseNo,
                        Quantity,
                        operatorName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNormalWareHouseInventoryAsync(string SkuNo, string ProductNo, string WareHouseNo, int Quantity, string operatorName) {
            this.UpdateNormalWareHouseInventoryAsync(SkuNo, ProductNo, WareHouseNo, Quantity, operatorName, null);
        }
        
        /// <remarks/>
        public void UpdateNormalWareHouseInventoryAsync(string SkuNo, string ProductNo, string WareHouseNo, int Quantity, string operatorName, object userState) {
            if ((this.UpdateNormalWareHouseInventoryOperationCompleted == null)) {
                this.UpdateNormalWareHouseInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNormalWareHouseInventoryOperationCompleted);
            }
            this.InvokeAsync("UpdateNormalWareHouseInventory", new object[] {
                        SkuNo,
                        ProductNo,
                        WareHouseNo,
                        Quantity,
                        operatorName}, this.UpdateNormalWareHouseInventoryOperationCompleted, userState);
        }
        
        private void OnUpdateNormalWareHouseInventoryOperationCompleted(object arg) {
            if ((this.UpdateNormalWareHouseInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNormalWareHouseInventoryCompleted(this, new UpdateNormalWareHouseInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ModifyChannelInventory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyChannelInventory(string xml) {
            object[] results = this.Invoke("ModifyChannelInventory", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyChannelInventoryAsync(string xml) {
            this.ModifyChannelInventoryAsync(xml, null);
        }
        
        /// <remarks/>
        public void ModifyChannelInventoryAsync(string xml, object userState) {
            if ((this.ModifyChannelInventoryOperationCompleted == null)) {
                this.ModifyChannelInventoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyChannelInventoryOperationCompleted);
            }
            this.InvokeAsync("ModifyChannelInventory", new object[] {
                        xml}, this.ModifyChannelInventoryOperationCompleted, userState);
        }
        
        private void OnModifyChannelInventoryOperationCompleted(object arg) {
            if ((this.ModifyChannelInventoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyChannelInventoryCompleted(this, new ModifyChannelInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnLockPidByProductNos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUnLockPidByProductNos(string productNos) {
            object[] results = this.Invoke("GetUnLockPidByProductNos", new object[] {
                        productNos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnLockPidByProductNosAsync(string productNos) {
            this.GetUnLockPidByProductNosAsync(productNos, null);
        }
        
        /// <remarks/>
        public void GetUnLockPidByProductNosAsync(string productNos, object userState) {
            if ((this.GetUnLockPidByProductNosOperationCompleted == null)) {
                this.GetUnLockPidByProductNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnLockPidByProductNosOperationCompleted);
            }
            this.InvokeAsync("GetUnLockPidByProductNos", new object[] {
                        productNos}, this.GetUnLockPidByProductNosOperationCompleted, userState);
        }
        
        private void OnGetUnLockPidByProductNosOperationCompleted(object arg) {
            if ((this.GetUnLockPidByProductNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnLockPidByProductNosCompleted(this, new GetUnLockPidByProductNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmCancelOrderRollBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmCancelOrderRollBack(string xml) {
            object[] results = this.Invoke("ConfirmCancelOrderRollBack", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmCancelOrderRollBackAsync(string xml) {
            this.ConfirmCancelOrderRollBackAsync(xml, null);
        }
        
        /// <remarks/>
        public void ConfirmCancelOrderRollBackAsync(string xml, object userState) {
            if ((this.ConfirmCancelOrderRollBackOperationCompleted == null)) {
                this.ConfirmCancelOrderRollBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmCancelOrderRollBackOperationCompleted);
            }
            this.InvokeAsync("ConfirmCancelOrderRollBack", new object[] {
                        xml}, this.ConfirmCancelOrderRollBackOperationCompleted, userState);
        }
        
        private void OnConfirmCancelOrderRollBackOperationCompleted(object arg) {
            if ((this.ConfirmCancelOrderRollBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmCancelOrderRollBackCompleted(this, new ConfirmCancelOrderRollBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetInventorySumByValidProductNos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetInventorySumByValidProductNos(string productNos) {
            object[] results = this.Invoke("GetInventorySumByValidProductNos", new object[] {
                        productNos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInventorySumByValidProductNosAsync(string productNos) {
            this.GetInventorySumByValidProductNosAsync(productNos, null);
        }
        
        /// <remarks/>
        public void GetInventorySumByValidProductNosAsync(string productNos, object userState) {
            if ((this.GetInventorySumByValidProductNosOperationCompleted == null)) {
                this.GetInventorySumByValidProductNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInventorySumByValidProductNosOperationCompleted);
            }
            this.InvokeAsync("GetInventorySumByValidProductNos", new object[] {
                        productNos}, this.GetInventorySumByValidProductNosOperationCompleted, userState);
        }
        
        private void OnGetInventorySumByValidProductNosOperationCompleted(object arg) {
            if ((this.GetInventorySumByValidProductNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInventorySumByValidProductNosCompleted(this, new GetInventorySumByValidProductNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SplitOrderRollBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SplitOrderRollBack(string xml) {
            object[] results = this.Invoke("SplitOrderRollBack", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SplitOrderRollBackAsync(string xml) {
            this.SplitOrderRollBackAsync(xml, null);
        }
        
        /// <remarks/>
        public void SplitOrderRollBackAsync(string xml, object userState) {
            if ((this.SplitOrderRollBackOperationCompleted == null)) {
                this.SplitOrderRollBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSplitOrderRollBackOperationCompleted);
            }
            this.InvokeAsync("SplitOrderRollBack", new object[] {
                        xml}, this.SplitOrderRollBackOperationCompleted, userState);
        }
        
        private void OnSplitOrderRollBackOperationCompleted(object arg) {
            if ((this.SplitOrderRollBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SplitOrderRollBackCompleted(this, new SplitOrderRollBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SwapUnLockInventorySum", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SwapUnLockInventorySum(string xml) {
            object[] results = this.Invoke("SwapUnLockInventorySum", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SwapUnLockInventorySumAsync(string xml) {
            this.SwapUnLockInventorySumAsync(xml, null);
        }
        
        /// <remarks/>
        public void SwapUnLockInventorySumAsync(string xml, object userState) {
            if ((this.SwapUnLockInventorySumOperationCompleted == null)) {
                this.SwapUnLockInventorySumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSwapUnLockInventorySumOperationCompleted);
            }
            this.InvokeAsync("SwapUnLockInventorySum", new object[] {
                        xml}, this.SwapUnLockInventorySumOperationCompleted, userState);
        }
        
        private void OnSwapUnLockInventorySumOperationCompleted(object arg) {
            if ((this.SwapUnLockInventorySumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SwapUnLockInventorySumCompleted(this, new SwapUnLockInventorySumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmChannelOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConfirmChannelOrder(string xml) {
            object[] results = this.Invoke("ConfirmChannelOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmChannelOrderAsync(string xml) {
            this.ConfirmChannelOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void ConfirmChannelOrderAsync(string xml, object userState) {
            if ((this.ConfirmChannelOrderOperationCompleted == null)) {
                this.ConfirmChannelOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmChannelOrderOperationCompleted);
            }
            this.InvokeAsync("ConfirmChannelOrder", new object[] {
                        xml}, this.ConfirmChannelOrderOperationCompleted, userState);
        }
        
        private void OnConfirmChannelOrderOperationCompleted(object arg) {
            if ((this.ConfirmChannelOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmChannelOrderCompleted(this, new ConfirmChannelOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VirtualProductPackOrder", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string VirtualProductPackOrder(string xml) {
            object[] results = this.Invoke("VirtualProductPackOrder", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VirtualProductPackOrderAsync(string xml) {
            this.VirtualProductPackOrderAsync(xml, null);
        }
        
        /// <remarks/>
        public void VirtualProductPackOrderAsync(string xml, object userState) {
            if ((this.VirtualProductPackOrderOperationCompleted == null)) {
                this.VirtualProductPackOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVirtualProductPackOrderOperationCompleted);
            }
            this.InvokeAsync("VirtualProductPackOrder", new object[] {
                        xml}, this.VirtualProductPackOrderOperationCompleted, userState);
        }
        
        private void OnVirtualProductPackOrderOperationCompleted(object arg) {
            if ((this.VirtualProductPackOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VirtualProductPackOrderCompleted(this, new VirtualProductPackOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TransferOutReturnOrderUnLock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TransferOutReturnOrderUnLock(string xml) {
            object[] results = this.Invoke("TransferOutReturnOrderUnLock", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TransferOutReturnOrderUnLockAsync(string xml) {
            this.TransferOutReturnOrderUnLockAsync(xml, null);
        }
        
        /// <remarks/>
        public void TransferOutReturnOrderUnLockAsync(string xml, object userState) {
            if ((this.TransferOutReturnOrderUnLockOperationCompleted == null)) {
                this.TransferOutReturnOrderUnLockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTransferOutReturnOrderUnLockOperationCompleted);
            }
            this.InvokeAsync("TransferOutReturnOrderUnLock", new object[] {
                        xml}, this.TransferOutReturnOrderUnLockOperationCompleted, userState);
        }
        
        private void OnTransferOutReturnOrderUnLockOperationCompleted(object arg) {
            if ((this.TransferOutReturnOrderUnLockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TransferOutReturnOrderUnLockCompleted(this, new TransferOutReturnOrderUnLockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSkuInventoryBySkuNos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSkuInventoryBySkuNos(string skuNos) {
            object[] results = this.Invoke("GetSkuInventoryBySkuNos", new object[] {
                        skuNos});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSkuInventoryBySkuNosAsync(string skuNos) {
            this.GetSkuInventoryBySkuNosAsync(skuNos, null);
        }
        
        /// <remarks/>
        public void GetSkuInventoryBySkuNosAsync(string skuNos, object userState) {
            if ((this.GetSkuInventoryBySkuNosOperationCompleted == null)) {
                this.GetSkuInventoryBySkuNosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSkuInventoryBySkuNosOperationCompleted);
            }
            this.InvokeAsync("GetSkuInventoryBySkuNos", new object[] {
                        skuNos}, this.GetSkuInventoryBySkuNosOperationCompleted, userState);
        }
        
        private void OnGetSkuInventoryBySkuNosOperationCompleted(object arg) {
            if ((this.GetSkuInventoryBySkuNosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSkuInventoryBySkuNosCompleted(this, new GetSkuInventoryBySkuNosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSkuNoCacheKeyFormatString", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSkuNoCacheKeyFormatString() {
            object[] results = this.Invoke("GetSkuNoCacheKeyFormatString", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSkuNoCacheKeyFormatStringAsync() {
            this.GetSkuNoCacheKeyFormatStringAsync(null);
        }
        
        /// <remarks/>
        public void GetSkuNoCacheKeyFormatStringAsync(object userState) {
            if ((this.GetSkuNoCacheKeyFormatStringOperationCompleted == null)) {
                this.GetSkuNoCacheKeyFormatStringOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSkuNoCacheKeyFormatStringOperationCompleted);
            }
            this.InvokeAsync("GetSkuNoCacheKeyFormatString", new object[0], this.GetSkuNoCacheKeyFormatStringOperationCompleted, userState);
        }
        
        private void OnGetSkuNoCacheKeyFormatStringOperationCompleted(object arg) {
            if ((this.GetSkuNoCacheKeyFormatStringCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSkuNoCacheKeyFormatStringCompleted(this, new GetSkuNoCacheKeyFormatStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMemcachedServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMemcachedServer() {
            object[] results = this.Invoke("GetMemcachedServer", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMemcachedServerAsync() {
            this.GetMemcachedServerAsync(null);
        }
        
        /// <remarks/>
        public void GetMemcachedServerAsync(object userState) {
            if ((this.GetMemcachedServerOperationCompleted == null)) {
                this.GetMemcachedServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMemcachedServerOperationCompleted);
            }
            this.InvokeAsync("GetMemcachedServer", new object[0], this.GetMemcachedServerOperationCompleted, userState);
        }
        
        private void OnGetMemcachedServerOperationCompleted(object arg) {
            if ((this.GetMemcachedServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMemcachedServerCompleted(this, new GetMemcachedServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUsableStockQuantityCompletedEventHandler(object sender, GetUsableStockQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsableStockQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsableStockQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventorySumCompletedEventHandler(object sender, GetInventorySumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryCompletedEventHandler(object sender, GetInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventorySumListCompletedEventHandler(object sender, GetInventorySumListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySumListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySumListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventorySumNoCacheCompletedEventHandler(object sender, GetInventorySumNoCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySumNoCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySumNoCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventorySumByProductNoCompletedEventHandler(object sender, GetInventorySumByProductNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySumByProductNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySumByProductNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetErpInventoryPIDRefCompletedEventHandler(object sender, GetErpInventoryPIDRefCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErpInventoryPIDRefCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetErpInventoryPIDRefCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsInventoryPIDRefExistCompletedEventHandler(object sender, IsInventoryPIDRefExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsInventoryPIDRefExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsInventoryPIDRefExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPidInfoCompletedEventHandler(object sender, GetPidInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPidInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPidInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPidListCompletedEventHandler(object sender, GetPidListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPidListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPidListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LockStockCacheCompletedEventHandler(object sender, LockStockCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockStockCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockStockCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnlockStockCacheCompletedEventHandler(object sender, UnlockStockCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnlockStockCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnlockStockCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateOrderCompletedEventHandler(object sender, CreateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateOrderRollBackCompletedEventHandler(object sender, CreateOrderRollBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrderRollBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrderRollBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CancelOrderCompletedEventHandler(object sender, CancelOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmCancelOrderCompletedEventHandler(object sender, ConfirmCancelOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmCancelOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmCancelOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SplitOrderCompletedEventHandler(object sender, SplitOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DistributeOrderCompletedEventHandler(object sender, DistributeOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DistributeOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DistributeOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PackOrderCompletedEventHandler(object sender, PackOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PackOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PackOrderRollBackCompletedEventHandler(object sender, PackOrderRollBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PackOrderRollBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PackOrderRollBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AllocateRequestCompletedEventHandler(object sender, AllocateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AllocateAuditSucceedCompletedEventHandler(object sender, AllocateAuditSucceedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocateAuditSucceedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocateAuditSucceedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AllocateAuditFailedCompletedEventHandler(object sender, AllocateAuditFailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllocateAuditFailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllocateAuditFailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SpecialAllocateRequestCompletedEventHandler(object sender, SpecialAllocateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialAllocateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialAllocateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SpecialAllocateAuditSucceedCompletedEventHandler(object sender, SpecialAllocateAuditSucceedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialAllocateAuditSucceedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialAllocateAuditSucceedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SpecialAllocateAuditFailedCompletedEventHandler(object sender, SpecialAllocateAuditFailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SpecialAllocateAuditFailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SpecialAllocateAuditFailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOrderStockCompletedEventHandler(object sender, TransferOrderStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOrderStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOrderStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PurchaseInStockCompletedEventHandler(object sender, PurchaseInStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseInStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseInStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReceiveProductCompletedEventHandler(object sender, ReceiveProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnBeforeDeliveryCompletedEventHandler(object sender, ReturnBeforeDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnBeforeDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnBeforeDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReturnAfterDeliveryCompletedEventHandler(object sender, ReturnAfterDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnAfterDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnAfterDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackRequestCompletedEventHandler(object sender, BackRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackAuditSucceedCompletedEventHandler(object sender, BackAuditSucceedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackAuditSucceedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackAuditSucceedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackAuditFailedCompletedEventHandler(object sender, BackAuditFailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackAuditFailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackAuditFailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BackRequestPidCancelCompletedEventHandler(object sender, BackRequestPidCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackRequestPidCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BackRequestPidCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyLogisticsNoCompletedEventHandler(object sender, ModifyLogisticsNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyLogisticsNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyLogisticsNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyStorePositionNoCompletedEventHandler(object sender, ModifyStorePositionNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyStorePositionNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyStorePositionNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConvertOrderTypeCompletedEventHandler(object sender, ConvertOrderTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertOrderTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertOrderTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConvertSkuTypeCompletedEventHandler(object sender, ConvertSkuTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConvertSkuTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConvertSkuTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyConsignVirtualStockCompletedEventHandler(object sender, ModifyConsignVirtualStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyConsignVirtualStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyConsignVirtualStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ProductTransferCompletedEventHandler(object sender, ProductTransferCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProductTransferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProductTransferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LendRequestCompletedEventHandler(object sender, LendRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LendRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LendRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LendAuditFailedCompletedEventHandler(object sender, LendAuditFailedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LendAuditFailedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LendAuditFailedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LendGiveBackCompletedEventHandler(object sender, LendGiveBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LendGiveBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LendGiveBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferConsignVirtualStockCompletedEventHandler(object sender, TransferConsignVirtualStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferConsignVirtualStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferConsignVirtualStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void StockTakingCompletedEventHandler(object sender, StockTakingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StockTakingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StockTakingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOutCompletedEventHandler(object sender, TransferOutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOutCancelCompletedEventHandler(object sender, TransferOutCancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutCancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutCancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferInCompletedEventHandler(object sender, TransferInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOutCreateOrderCompletedEventHandler(object sender, TransferOutCreateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutCreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutCreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOutReturnOrderCompletedEventHandler(object sender, TransferOutReturnOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutReturnOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutReturnOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOutExchangePidCompletedEventHandler(object sender, TransferOutExchangePidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutExchangePidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutExchangePidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOutValidateCompletedEventHandler(object sender, TransferOutValidateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RepairBackCompletedEventHandler(object sender, RepairBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RepairBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RepairBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VirtualProductCreateOrderCompletedEventHandler(object sender, VirtualProductCreateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VirtualProductCreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VirtualProductCreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void LockPidCompletedEventHandler(object sender, LockPidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LockPidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LockPidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnLockPidCompletedEventHandler(object sender, UnLockPidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnLockPidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnLockPidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetStockFlagByPidCompletedEventHandler(object sender, GetStockFlagByPidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStockFlagByPidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStockFlagByPidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConsignEntityIventoryQuantityCompletedEventHandler(object sender, GetConsignEntityIventoryQuantityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConsignEntityIventoryQuantityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConsignEntityIventoryQuantityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventorySumByProductNosCompletedEventHandler(object sender, GetInventorySumByProductNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySumByProductNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySumByProductNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SwapLockInventorySumCompletedEventHandler(object sender, SwapLockInventorySumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapLockInventorySumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapLockInventorySumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteReceiveProductCompletedEventHandler(object sender, DeleteReceiveProductCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReceiveProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReceiveProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCacheCompletedEventHandler(object sender, GetCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RemoveCacheCompletedEventHandler(object sender, RemoveCacheCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveCacheCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveCacheCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryChangeLogCompletedEventHandler(object sender, GetInventoryChangeLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryChangeLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryChangeLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventorySumNoCache1CompletedEventHandler(object sender, GetInventorySumNoCache1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySumNoCache1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySumNoCache1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventory1CompletedEventHandler(object sender, GetInventory1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventory1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventory1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventoryPIDRefBySkuNoCompletedEventHandler(object sender, GetInventoryPIDRefBySkuNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventoryPIDRefBySkuNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventoryPIDRefBySkuNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateNormalInventorySumCompletedEventHandler(object sender, UpdateNormalInventorySumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNormalInventorySumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNormalInventorySumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateNormalWareHouseInventoryCompletedEventHandler(object sender, UpdateNormalWareHouseInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNormalWareHouseInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNormalWareHouseInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ModifyChannelInventoryCompletedEventHandler(object sender, ModifyChannelInventoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyChannelInventoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyChannelInventoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUnLockPidByProductNosCompletedEventHandler(object sender, GetUnLockPidByProductNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnLockPidByProductNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnLockPidByProductNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmCancelOrderRollBackCompletedEventHandler(object sender, ConfirmCancelOrderRollBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmCancelOrderRollBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmCancelOrderRollBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetInventorySumByValidProductNosCompletedEventHandler(object sender, GetInventorySumByValidProductNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInventorySumByValidProductNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInventorySumByValidProductNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SplitOrderRollBackCompletedEventHandler(object sender, SplitOrderRollBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SplitOrderRollBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SplitOrderRollBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SwapUnLockInventorySumCompletedEventHandler(object sender, SwapUnLockInventorySumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SwapUnLockInventorySumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SwapUnLockInventorySumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ConfirmChannelOrderCompletedEventHandler(object sender, ConfirmChannelOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmChannelOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmChannelOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void VirtualProductPackOrderCompletedEventHandler(object sender, VirtualProductPackOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VirtualProductPackOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VirtualProductPackOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TransferOutReturnOrderUnLockCompletedEventHandler(object sender, TransferOutReturnOrderUnLockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TransferOutReturnOrderUnLockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TransferOutReturnOrderUnLockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSkuInventoryBySkuNosCompletedEventHandler(object sender, GetSkuInventoryBySkuNosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSkuInventoryBySkuNosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSkuInventoryBySkuNosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSkuNoCacheKeyFormatStringCompletedEventHandler(object sender, GetSkuNoCacheKeyFormatStringCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSkuNoCacheKeyFormatStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSkuNoCacheKeyFormatStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetMemcachedServerCompletedEventHandler(object sender, GetMemcachedServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMemcachedServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMemcachedServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591